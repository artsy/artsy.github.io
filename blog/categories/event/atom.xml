<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: event | Artsy Engineering]]></title>
  <link href="https://artsy.github.io/blog/categories/event/atom.xml" rel="self"/>
  <link href="https://artsy.github.io/"/>
  <updated>2024-10-30T17:33:51+00:00</updated>
  <id>https://artsy.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JavaScriptures 5 - Tooling]]></title>
    <link href="https://artsy.github.io/blog/2018/06/15/JavaScriptures-5-Babel-Webpack/"/>
    <updated>2018-06-15T00:00:00+00:00</updated>
    <id>https://artsy.github.io/blog/2018/06/15/JavaScriptures-5-Babel-Webpack</id>
    <content type="html"><![CDATA[<p>The sixth, and last in our JavaScriptures series on the Artsy <a href="http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/">omakase</a>. This talk covers a lot of the
tooling basics for setting up a web JavaScript project. In this talk <a href="https://github.com/damassi">Chris</a> covers the how to use Webpack
and Babel in a fresh application.</p>

<!-- more -->

<center>
<iframe width="100%" height="400" src="https://www.youtube.com/embed/NhYot0NC6q8" frameborder="0" allowfullscreen=""></iframe>
</center>

<p style="text-align:right;"><a href="https://speakerdeck.com/artsyopensource/javascriptures-5-babel-and-webpack?slide=1">
Slides on Speakerdeck
</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptures 4.2 - Local State]]></title>
    <link href="https://artsy.github.io/blog/2018/06/15/JavaScriptures-4.2-Local-State/"/>
    <updated>2018-06-15T00:00:00+00:00</updated>
    <id>https://artsy.github.io/blog/2018/06/15/JavaScriptures-4.2-Local-State</id>
    <content type="html"><![CDATA[<p>The fifth in our JavaScriptures series on the Artsy <a href="http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/">omakase</a>. This talk is the second part on state
management inside JavaScript projects. In this talk <a href="https://github.com/damassi">Chris</a> and <a href="https://twitter.com/seevexes">Eve</a> cover the basics of how we handle
interacting with local state in our different applications.</p>

<p><a href="https://github.com/damassi">Chris</a> and <a href="https://twitter.com/seevexes">Eve</a> <a href="https://github.com/artsy/javascriptures/tree/master/5_intro-to-state">create three demos</a> which cover using Reacts <code class="language-plaintext highlighter-rouge">setState</code>, <a href="https://github.com/artsy/javascriptures/blob/master/5_intro-to-state/2-redux">Redux</a> and
<a href="https://github.com/jamiebuilds/unstated">Unstated</a> to make complex applications.</p>

<!-- more -->

<center>
<iframe width="100%" height="400" src="https://www.youtube.com/embed/uLeZnpvVpxA" frameborder="0" allowfullscreen=""></iframe>
</center>

<p style="text-align:right;"><a href="https://speakerdeck.com/artsyopensource/javascriptures-4-dot-2-local-state?slide=1">
Slides on Speakerdeck
</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptures 4.1 - Relay]]></title>
    <link href="https://artsy.github.io/blog/2018/06/13/JavaScriptures-4.1-Relay/"/>
    <updated>2018-06-13T00:00:00+00:00</updated>
    <id>https://artsy.github.io/blog/2018/06/13/JavaScriptures-4.1-Relay</id>
    <content type="html"><![CDATA[<p>The fourth in our JavaScriptures series on the Artsy <a href="http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/">omakase</a>. This talk is the first part on state
management inside JavaScript projects. In this talk <a href="https://twitter.com/alloy">Alloy</a> covers the basics of how we handle interacting with
external state with our GraphQL API <a href="https://github.com/artsy/metaphysics/">metaphysics</a>.</p>

<p><a href="https://twitter.com/alloy">Alloy</a> takes our <a href="https://github.com/artsy/javascriptures/tree/master/4_intro-to-relay">existing demo application</a> from the previous JavaScriptures and converts it to use Relay
with all of the Artsy tooling.</p>

<!-- more -->

<center>
<iframe width="100%" height="400" src="https://www.youtube.com/embed/-Ax46yDG7oc" frameborder="0" allowfullscreen=""></iframe>
</center>

<p style="text-align:right;"><a href="https://speakerdeck.com/artsyopensource/javascriptures-4-dot-1-relay?">
Slides on Speakerdeck
</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Announcing: Artsy x React Native]]></title>
    <link href="https://artsy.github.io/blog/2018/06/03/Announcing-Artsy-x-React-Native/"/>
    <updated>2018-06-03T00:00:00+00:00</updated>
    <id>https://artsy.github.io/blog/2018/06/03/Announcing-Artsy-x-React-Native</id>
    <content type="html"><![CDATA[<p>React Native has a lot of buzz around it. It is some serious and cool tech, yet can feel like a big departure from
your native iOS codebase. At Artsy, we like it. It has been the right choice for us. We’ve <a href="http://artsy.github.io/search/?q=react+native">documented</a> <a href="http://artsy.github.io/series/react-native-at-artsy/">our</a>
<a href="http://artsy.github.io/blog/2016/08/15/React-Native-at-Artsy/">journey</a> and <a href="http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/">reasoning</a> quite extensively, but naturally, developers around the world are still wondering
whether the trade-offs make sense to <em>their</em> team, and <em>their</em> situation.</p>

<p>Enter <a href="https://www.artsy.net/x-react-native">Artsy x React-Native</a>.</p>

<p>Who better to partner with than Facebook? We’re bringing a day full of hands-on informative insight and practical
play. With the focus on what building world class applications with RN can be like.</p>

<p>We’ll demo, through talks and workshops, how to add React Native bit by bit to an existing codebase, set your
tooling up for success, and create solid animations.</p>

<p>We want <a href="https://www.artsy.net/x-react-native">Artsy x React-Native</a> to be about getting you up to speed with the framework, so you can make your
own decisions going forward.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptures 3 - Styled Components]]></title>
    <link href="https://artsy.github.io/blog/2018/05/04/JavaScriptures-3-Styled-Components/"/>
    <updated>2018-05-04T00:00:00+00:00</updated>
    <id>https://artsy.github.io/blog/2018/05/04/JavaScriptures-3-Styled-Components</id>
    <content type="html"><![CDATA[<p>The third in our JavaScriptures series on the Artsy <a href="http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/">omakase</a>. This workshop is a deep dive into <a href="https://www.styled-components.com">Styled
Components</a>, where we take our React app from the first workshop and convert it to use Styled Components. We
have Roop and Jon Allured covering all the details.</p>

<!-- more -->

<center>
<iframe width="100%" height="400" src="https://www.youtube.com/embed/K7xafqfcC-4" frameborder="0" allowfullscreen=""></iframe>
</center>

<p style="text-align:right;"><a href="https://speakerdeck.com/artsyopensource/javascriptures-3-styled-components">
Slides on Speakerdeck
</a></p>

]]></content>
  </entry>
  
</feed>
