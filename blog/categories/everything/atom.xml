<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: everything | Artsy Engineering]]></title>
  <link href="https://artsy.github.io/blog/categories/everything/atom.xml" rel="self"/>
  <link href="https://artsy.github.io/"/>
  <updated>2024-05-17T14:49:02+00:00</updated>
  <id>https://artsy.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Orta's best of]]></title>
    <link href="https://artsy.github.io/blog/2019/05/03/ortas-best-of/"/>
    <updated>2019-05-03T00:00:00+00:00</updated>
    <id>https://artsy.github.io/blog/2019/05/03/ortas-best-of</id>
    <content type="html"><![CDATA[<p>Today is my last day at Artsy, it’s been 8 years and I figured a nice way to book-end my time here is to make a
post that tries to talk over <a href="https://artsy.github.io/author/orta/">the last ~90 blog posts I’ve shipped</a>. My posts
tell the story of a junior-ish engineering solving problems on successive larger scales, until their decisions
impact whole industries.</p>

<p>These posts cover so many topics that the right way to give them justice is to try group them in terms of general
themes and provide a larger context about why they were written.</p>

<!-- more -->

<p>I used to occasionally write before I came to Artsy, but inside the environment of Artsy’s Engineering team I could
consider it <em>“work work”</em> and not just <em>“things I should do, but in my own spare time.”</em> Writing for Artsy on the
blog is <a href="https://artsy.github.io/blog/2019/01/30/why-we-run-our-blog/">very similar to writing code in our repos</a>, you assign an editor (thanks <a href="https://github.com/artsy/artsy.github.io/pulls?utf8=✓&amp;q=is%3Aclosed+is%3Apr+author%3Aorta+">Ash</a> for
taking the lion’s share!) and request reviews. This lowered the barriers considerably.</p>

<h1 id="career-growth">Career Growth</h1>

<p>I started working at Artsy with about 2-3 years of professional programming experience at the end of 2011. When
people ask about how career progression tends to work I TLDR it as:
&lt;/br&gt;<code class="language-plaintext highlighter-rouge">Feature -&gt; Section of Codebase -&gt; Codebase -&gt; Codebases -&gt; Systems -&gt; Businesses -&gt; Industry</code><br /></p>

<p>This echoes how Artsy used to handle <a href="https://artsy.github.io/blog/2016/09/10/Help!-I'm-becoming-Post-Junior/">an IC career ladder</a> (<a href="https://github.com/artsy/README/blob/master/careers/ladder.md">current</a>). At that
point I joined, I sat somewhere around <code class="language-plaintext highlighter-rouge">Section of Codebase</code>. Each progression is more responsibility, and can
sometimes be about making decisions and not necessarily being the person to put the work in.</p>

<ul>
  <li>
    <p><strong>2012 - Building Features</strong> - <br /><a href="https://artsy.github.io/blog/2012/09/13/on-grid-thumbnails/">On Grid Thumbnails</a> &amp; <a href="https://artsy.github.io/blog/2012/05/11/on-making-it-personal--in-iOS-with-searchbars/">On Making It Personal in iOS with
Searchbars</a></p>
  </li>
  <li>
    <p><strong>2013 - Creating Libraries</strong> - <br /><a href="https://artsy.github.io/blog/2013/04/10/aranalytics/">ARAnalytics - Analytics for iOS Apps</a> &amp; <a href="https://artsy.github.io/blog/2013/03/29/musical-chairs/">Musical Chairs</a></p>
  </li>
  <li>
    <p><strong>2014 - Supporting Team Infra</strong> - <br /><a href="https://artsy.github.io/blog/2014/08/08/CocoaPods-Caching/">Using CocoaPods Caching with Travis CI</a>, <a href="https://artsy.github.io/blog/2014/06/17/building-the-xcode-plugin-snapshots/">Building the Xcode
Plugin Snapshots</a> &amp; <a href="https://artsy.github.io/blog/2014/06/11/testing-core-data-migrations/">Testing Core Data Migrations</a></p>
  </li>
  <li>
    <p><strong>2015 - Long term iOS Software Architecture and OSS</strong> - <br /><a href="https://artsy.github.io/blog/2015/09/18/Cocoa-Architecture-Dependencies/">Dependencies</a>, <a href="https://artsy.github.io/blog/2015/09/01/Cocoa-Architecture-Dropped-Design-Patterns/">Dropped Design Patterns</a>,
<a href="https://artsy.github.io/blog/2015/08/24/Cocoa-Architecture-Hybrid-Apps/">Hybrid Apps</a>, <a href="https://artsy.github.io/blog/2015/08/19/Cocoa-Architecture-Switchboard-Pattern/">ARSwitchboard</a>, <a href="https://artsy.github.io/blog/2015/08/15/Cocoa-Architecture-Router-Pattern/">ARRouter</a> and <a href="https://artsy.github.io/blog/2015/08/06/open-sourcing-energy/">Open Sourcing Energy</a>, <a href="https://artsy.github.io/blog/2015/04/28/how-we-open-sourced-eigen/">How we Open
Source’d Eigen</a> &amp; <a href="https://artsy.github.io/blog/2015/12/10/License-and-You/">Licenses for OSS Code</a></p>
  </li>
  <li>
    <p><strong>2016 - Consolidating web + iOS</strong> - <br /><a href="https://artsy.github.io/blog/2016/08/24/On-Emission/">On our implementation of React Native</a>, <a href="https://artsy.github.io/blog/2016/06/19/graphql-for-mobile/">GraphQL for iOS
Developers</a>, <a href="https://artsy.github.io/blog/2016/08/15/vscode/">Using VS Code for JavaScript</a> &amp; <a href="https://artsy.github.io/blog/2016/11/14/JS-Glossary/">JavaScript Glossary for
2017</a></p>
  </li>
  <li>
    <p><strong>2017 - Process at Scale (OSS/All of Artsy)</strong> - <br /><a href="https://artsy.github.io/blog/2017/10/10/C4Q-QandA/">C4Q&amp;A</a>, <a href="https://artsy.github.io/blog/2017/09/04/Introducing-Peril/">Introducing Peril to the Artsy Org</a>,
<a href="https://artsy.github.io/blog/2017/06/30/danger-one-oh-again/">Danger</a> &amp; <a href="https://artsy.github.io/blog/2017/04/14/artsy-technology-stack-2017/">Artsy’s Technology Stack, 2017</a></p>
  </li>
  <li>
    <p><strong>2018 - Cementing Artsy Culture</strong> - <br />JavaScriptures (<a href="https://artsy.github.io/blog/2018/05/01/JavaScriptures-1-React/">React</a>, <a href="https://artsy.github.io/blog/2018/05/02/JavaScriptures-2-TypeScript/">TypeScript</a>, <a href="https://artsy.github.io/blog/2018/06/15/JavaScriptures-4.2-Local-State/">Tooling</a>,
<a href="https://artsy.github.io/blog/2018/06/13/JavaScriptures-4.1-Relay/">Relay</a>, <a href="https://artsy.github.io/blog/2018/06/15/JavaScriptures-4.2-Local-State/">Local State</a>, <a href="https://artsy.github.io/blog/2018/05/04/JavaScriptures-3-Styled-Components/">Styled Components</a>), <a href="https://artsy.github.io/blog/2018/10/18/long-term-highlights/">Engineering Highlights</a> &amp; <a href="https://artsy.github.io/blog/2018/06/03/Announcing-Artsy-x-React-Native/">Announcing:
Artsy x React Native</a></p>
  </li>
  <li>
    <p><strong>2019 - Archivist</strong> - <br /><a href="https://artsy.github.io/blog/2019/04/11/on-an-rfcs-process/">Why we added an RFC process to Artsy</a>, <a href="https://artsy.github.io/blog/2019/04/10/omakase-relay/">Why does Artsy use Relay?</a>, <a href="https://artsy.github.io/blog/2019/01/30/why-we-run-our-blog/">Why
We Run Our Own Blog</a>, <a href="https://artsy.github.io/blog/2019/04/04/peril-architecture-deep-dive/">Peril Architecture Deep Dive</a> &amp; this post.</p>
  </li>
</ul>

<h1 id="ios">iOS</h1>

<p>While I was originally expecting to be working on Ruby apps at Artsy, I very quickly ended up working on our iOS
app <a href="https://folio.artsy.net">Artsy Folio</a> and eventually owned it post-1.0. This makes sense because I had a few years of macOS
native experience and I knew the project lead (<a href="https://twitter.com/benjaminjackson">Ben Jackson</a>.)</p>

<p>Over time, I grew to own the iOS team at Artsy. In doing so I became a manager with 3-4 reports and tried to really
make a name for Artsy’s iOS team in the industry. We built more apps, and started to need to think through our
larger I found our <a href="https://www.artsy.net/article/artsy-jobs-mobile-engineer">old job posting</a> from just before we consolidated with web. It echoes a lot of the
idea on how I framed our team’s responsibilities being in that we should build Artsy in a way that improves the
industry for everyone too.</p>

<blockquote>
  <p><a href="https://artsy.github.io/blog/2015/09/18/Cocoa-Architecture-Dependencies/">Dependencies</a>, <a href="https://artsy.github.io/blog/2015/09/01/Cocoa-Architecture-Dropped-Design-Patterns/">Dropped Design Patterns</a>, <a href="https://artsy.github.io/blog/2015/08/24/Cocoa-Architecture-Hybrid-Apps/">Hybrid Apps</a>, <a href="https://artsy.github.io/blog/2015/08/19/Cocoa-Architecture-Switchboard-Pattern/">ARSwitchboard</a> &amp; <a href="https://artsy.github.io/blog/2015/08/15/Cocoa-Architecture-Router-Pattern/">ARRouter</a></p>
</blockquote>

<p>I think the pinnacle of my writing in this phase comes from a collaboration with the entire iOS team the magazine
<a href="https://www.objc.io/">obcj.io</a> - <a href="https://www.objc.io/issues/22-scale/artsy/">iOS at Scale: Artsy</a>.</p>

<p>As we hired, it became important to find ways to teach each other how our native codebases work. So, we have a set
of open codebase walk-throughs which explain the high level architecture and occasionally deep-dive on specific
features.</p>

<blockquote>
  <p>Code Review: <a href="https://artsy.github.io/blog/2015/11/05/Emergence-Code-Review/">Emergence</a>, <a href="https://artsy.github.io/blog/2016/02/11/Code-Review-Energy/">Energy</a>, <a href="https://artsy.github.io/blog/2016/02/12/Code-Review-Energy-Sync/">Energy Sync</a></p>
</blockquote>

<p>As we started to adopt React Native at Artsy, we really needed a different structure for our entire team and
technology stack. We had to re-think how we build apps, interact with the open community and what we were as
engineers.</p>

<blockquote>
  <p><a href="https://artsy.github.io/blog/2016/08/24/On-Emission/">On our implementation of React Native</a>, <a href="https://artsy.github.io/blog/2017/02/05/Retrospective-Swift-at-Artsy/">Retrospective: Swift at Artsy</a>, <a href="https://artsy.github.io/blog/2017/07/06/React-Native-for-iOS-devs/">Intro to React
Native for an iOS Developer</a>, <a href="https://artsy.github.io/blog/2018/03/17/two-years-of-react-native/">React Native, 2 years later</a>, <a href="https://artsy.github.io/blog/2018/04/17/making-a-components-pod/">Making a React Native Components
Pod</a> &amp; <a href="https://artsy.github.io/blog/2019/03/17/three-years-of-react-native/">React Native at Artsy, 3 years later</a></p>
</blockquote>

<p>Re-defining ourselves as native engineers who support JavaScript via our iOS silos was tricky, I think both
<a href="https://ashfurrow.com/blog/learning-from-other-programming-communities/">Ash</a> &amp; <a href="https://www.youtube.com/watch?v=zqnJBksguVI">Maxim</a> have great write-ups on the topic. For me, the move to the
JavaScript came at a perfect time: the iOS community was fragmenting because of competing dependency managers and
the introduction of Swift which made infrastructure work less valuable.</p>

<p>We still needed to be up-to-date with the latest tools and ideas from the native world, but mainly from “iOS as
Platform” instead of features development (though my non-technical <a href="https://artsy.github.io/blog/2018/03/18/ar/">ARKit post</a> is a great read).</p>

<blockquote>
  <p><a href="https://artsy.github.io/blog/2017/07/31/fastlane-travis-weekly-deploys/">Deploying your app on a weekly basis via fastlane + Travis CI</a>, <a href="https://artsy.github.io/blog/2017/04/05/what-is-fastlane-match/">What is fastlane match?</a>,
<a href="https://artsy.github.io/blog/2019/01/05/its-time-to-use-spm/">It’s time to use Swift Package Manager</a>, <a href="https://artsy.github.io/blog/2016/10/14/Accessing-the-Source-Code-from-your-Simulator/">Accessing the app’s Source Code from your Simulator</a>, <a href="https://artsy.github.io/blog/2016/05/03/podspec-checksums/">Why
does my team’s Podfile.lock Podspec checksums change?</a>, <a href="https://artsy.github.io/blog/2016/03/05/iOS-Code-Injection/">Code Injection for Xcode</a>, <a href="https://artsy.github.io/blog/2014/06/20/artsys-first-closed-source-pod/">Artsy’s
first closed source Pod</a>, <a href="https://artsy.github.io/blog/2015/01/21/cocoapods-keys-and-CI/">CocoaPods-Keys and CI</a></p>
</blockquote>

<h1 id="javascript">JavaScript</h1>

<p>To get experience in JavaScript, I took one of my large open source projects and <a href="https://artsy.github.io/blog/2017/06/30/danger-one-oh-again/">re-create it from
scratch</a>. Which eventually turned into <a href="https://artsy.github.io/blog/2017/09/04/Introducing-Peril/">Peril</a>, which solves <a href="https://artsy.github.io/blog/2018/06/18/On-Obsessive-Statelessness/">some interesting
problems</a> at Artsy and in the rest of my OSS work.</p>

<p>For Artsy, we needed to consider: What is the right tech to build for both React Native and React on web? We had a
good guess <a href="https://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/">back in 2016</a> and that slowly evolved over the course of a few years into what we now call
the <a href="https://www.youtube.com/watch?v=1Z3loALSVQM">Artsy Omakase</a>. Making sure that the rest of the team agreed, and that new people could go see our
reasoning was important when making foundations which could last 5-10 years.</p>

<blockquote>
  <p><a href="https://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/">Exploration: Front-end JavaScript at Artsy in 2017</a>, <a href="https://artsy.github.io/blog/2016/08/15/vscode/">Using VS Code for JavaScript</a>, <a href="https://artsy.github.io/blog/2016/06/19/graphql-for-mobile/">GraphQL
for iOS Developers</a>, JavaScriptures (<a href="https://artsy.github.io/blog/2018/05/01/JavaScriptures-1-React/">React</a>, <a href="https://artsy.github.io/blog/2018/05/02/JavaScriptures-2-TypeScript/">TypeScript</a>, <a href="https://artsy.github.io/blog/2018/06/15/JavaScriptures-4.2-Local-State/">Tooling</a>, <a href="https://artsy.github.io/blog/2018/06/13/JavaScriptures-4.1-Relay/">Relay</a>, <a href="https://artsy.github.io/blog/2018/06/15/JavaScriptures-4.2-Local-State/">Local
State</a>, <a href="https://artsy.github.io/blog/2018/05/04/JavaScriptures-3-Styled-Components/">Styled Components</a>), <a href="https://artsy.github.io/blog/2019/04/10/omakase-relay/">Why does Artsy use Relay?</a></p>
</blockquote>

<h1 id="open-source">Open Source</h1>

<p>Artsy had a rich relationship with Open Source before I arrived, and I devoted a lot of time and effort to making
this world-class. There is an entire blog post on how Artsy became <a href="https://artsy.github.io/blog/2019/04/29/how-did-artsy-become-oss-by-default/">Open Source by Default</a>, but I made sure
to make it easy for people interested in following Artsy’s footsteps. I believe the world will be a lot richer as
more people work in the open.</p>

<blockquote>
  <p><a href="https://artsy.github.io/blog/2016/01/13/OSS-Expectations/">Open Expectations</a>, <a href="https://artsy.github.io/blog/2017/01/04/OSS-FAQ/">Open Source FAQ for Engineers</a>, <a href="https://artsy.github.io/blog/2015/12/10/License-and-You/">Licenses for OSS Code</a>, <a href="https://artsy.github.io/blog/2015/08/06/open-sourcing-energy/">Open
Sourcing Energy</a>, <a href="https://artsy.github.io/blog/2015/04/28/how-we-open-sourced-eigen/">How we Open Source’d Eigen</a>, <a href="https://artsy.github.io/blog/2016/09/06/Milestone-on-OSS-by-Default/">Helping the Web Towards OSS by
Default</a>, <a href="https://artsy.github.io/blog/2018/08/21/OSS-by-Default-Docs/">Open Source by Default: Docs</a></p>
</blockquote>

<h1 id="teaching">Teaching</h1>

<p>To quote myself:</p>

<blockquote>
  <p>Open Source is important to me because I grew up outside of an urban center in Britain where I had very little in
the way of community mentorship. Open Source gave me the ability to see how difficult things were built. I moved
from being a beginner to an intermediate programmer by reading the source code that others had opened up.</p>
</blockquote>

<p>→ <a href="https://open.nytimes.com/five-questions-with-orta-therox-d5bb9659c50b">5 Questions with Orta Therox</a> <em>(open.nytimes.com)</em></p>

<p>I use Open Source, and Artsy’s leverage, to help make sure that the next generation of programmers feel like they
have so much more insight into how we build hard things. I know it’s not easy getting started, so I’ve tried to
take common questions and wrap them up into larger sets of documentation on how I went through those phases.</p>

<blockquote>
  <p><a href="https://artsy.github.io/blog/2016/01/30/iOS-Junior-Interviews/">Interviewing, applying and getting your first job in iOS</a>, <a href="https://artsy.github.io/blog/2016/09/10/Help!-I'm-becoming-Post-Junior/">Help! I’m becoming
Post-Junior</a>, <a href="https://artsy.github.io/blog/2016/11/14/JS-Glossary/">JavaScript Glossary for 2017</a>, <a href="https://artsy.github.io/blog/2017/10/10/C4Q-QandA/">C4Q&amp;A</a> &amp; <a href="https://artsy.github.io/blog/2018/01/10/C4Q-QandA-two/">C4Q&amp;A 2</a></p>
</blockquote>

<h1 id="so-what-next">So, What Next?</h1>

<p>If you want to keep on top of what I’m up-to, I’m starting <a href="https://buttondown.email/orta">a personal mailing list</a>. You should join, it’ll
be roughly monthly - so pretty low key.</p>

<p>Well, I built a system for doing guest posts in this blog, so maybe I’ll appear again on this blog now that I can’t
write “we” when talking about Artsy. In the mean time there’s a lot of engineers at Artsy writing really cool
things!</p>

<p align="right"><code>./orta</code>&lt;/br&gt;<code>x</code></p>

]]></content>
  </entry>
  
</feed>
